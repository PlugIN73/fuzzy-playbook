---
-
  hosts: all
  vars:

    oracle_installer_key: oracle-java7-installer
    oracle_license_key: accepted-oracle-license-v1-1
    java_versions: oracle-jdk7-installer

    leiningen_version: '2.3.4'

    ruby_version: 2.0.0
    system:
      username: vagrant

    erlang:
      version: r16b03
      version_big: R16B03

    handgun:
      path: /home/vagrant/handgun
      repo_url: git://git.undev.cc/renginejs/handgun.git

  tasks:
    - name: Setup oracle java deb repo
      sudo: true
      apt_repository: repo="deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" update_cache=yes
      when: ansible_distribution in [ 'Ubuntu' ]

    - name: Accept Oracle license
      sudo: true
      debconf: name="{{oracle_installer_key}}" question='shared/{{oracle_license_key}}' value='true' vtype='select'

    - name: Install Oracle Java
      apt: pkg={{ item }} update-cache=yes state=latest force=true
      sudo: true
      when: item|search("^oracle")
      with_items: java_versions

    - name: apt update
      apt: update_cache=yes cache_valid_time=3600
      sudo: true

    - name: install packages
      apt: pkg={{ item }} state=installed
      sudo: true
      with_items:
        - curl
        - vim-gnome
        - git
        - runit
        - redis-server
        - mysql-server
        - mysql-client
        - libcurl4-openssl-dev
        - libmysql-ruby
        - libmysqlclient-dev
        - libpq-dev
        - libxslt1-dev
        - htop
        - strace
        - python-pycurl

    - name: download leiningen
      sudo: true
      get_url:  url=https://raw.github.com/technomancy/leiningen/{{leiningen_version}}/bin/lein 
                dest=/usr/local/bin/lein-{{leiningen_version}}
                mode=0755

    - name: link to main version of leinigen
      sudo: true
      file: dest=/usr/local/bin/lein
            src=/usr/local/bin/lein-{{leiningen_version}}
            state=link

    - name: root may execute leiningen 
      sudo: true
      lineinfile: line='export LEIN_ROOT=True'
                  state=present
                  dest=~root/.bashrc

    - name: rvm install
      shell: curl -sSL https://get.rvm.io | bash -s stable --ruby={{ruby_version}} --autolibs=enabled
        creates=~/.rvm/rubies/default/

    - name: git flow install
      shell: wget --no-check-certificate -q  https://raw.github.com/petervanderdoes/gitflow/develop/contrib/gitflow-installer.sh
             && bash gitflow-installer.sh install stable; rm gitflow-installer.sh
             creates=~{{system.username}}/gitflow/.git/
      sudo: true

  # Install erlang
    -
      name: setup kerl
      sudo: true
      shell:
        curl -O https://raw.githubusercontent.com/spawngrid/kerl/master/kerl
        && chmod +x kerl
        && cp kerl /usr/local/bin
        creates=/usr/local/bin/kerl
    -
      name: install erlang requirements
      apt: pkg=libncurses5-dev state=installed
      sudo: true
    -
      name: setup erlang
      shell:
        kerl build {{erlang.version_big}} {{erlang.version}}
        && kerl install {{erlang.version}} ~{{ system.username }}/.kerl/erlangs/{{erlang.version}}
        creates=~{{ system.username }}/.kerl/erlangs/{{erlang.version}}
    -
      name: activate erlang
      lineinfile:
        dest=~{{ system.username }}/.bashrc
        line=". ~{{ system.username }}/.kerl/erlangs/{{erlang.version}}/activate"
        create=yes
        state=present
        backup=yes
        insertafter=EOF
    # Install node.js
    -
      name: add repository for nodejs
      sudo: true
      apt_repository: repo='ppa:chris-lea/node.js' update_cache=yes
    -
      name: install nodejs
      apt: pkg=nodejs state=installed
      sudo: true
    # Install handgun
    -
      name: clone handgun from repository
      git: repo={{ handgun.repo_url }}
           dest={{ handgun.path }}
           accept_hostkey=yes
    -
      name: compile handgun
      shell: . ~{{ system.username }}/.kerl/erlangs/{{erlang.version}}/activate
        && erl -version && make chdir={{ handgun.path }}
    -
      name: activate hangun
      lineinfile:
        dest=~{{ system.username }}/.bashrc
        line="alias handgun='{{handgun.path}}/bin/run'"
        state=present
        create=yes
        backup=yes
        insertafter=EOF

  handlers:
    -
      name: restart postgresql
      sudo: true
      service: name=postgresql state=restarted
    -
      name: reload nginx
      sudo: true
      service: name=nginx state=reloaded

